name: Save Changes in message.txt

on:
  push:
    branches: [main]

jobs:
  save-message-diff:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: ⚙️ Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: 🔍 Check if data/message.txt was changed
        id: check_file
        run: |
          echo "🔁 Checking diff for data/message.txt..."
          changed=$(git diff --name-only $GITHUB_SHA^ $GITHUB_SHA | grep -c "^data/message.txt$" || true)
          if [ "$changed" -eq 1 ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo "data/message.txt was modified in this commit."
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "data/message.txt was not modified in this commit."
          fi

      - name: 📄 Append diff to logs/message_diff.txt
        if: steps.check_file.outputs.changed == 'true'
        run: |
          mkdir -p logs
          AUTHOR=$(git log -1 --pretty=format:'%an')
          DATE=$(date +"%Y-%m-%d %H:%M:%S")
          COMMIT=$GITHUB_SHA

          echo "## 🔧 Change by $AUTHOR on $DATE" >> logs/message_diff.txt
          echo "📄 Diff for data/message.txt (commit $COMMIT):" >> logs/message_diff.txt

          git diff $GITHUB_SHA^ $GITHUB_SHA -- data/message.txt | \
          grep -E '^\+[^+]|^\-[^-]' | while read line; do
            if [[ "$line" =~ ^\+ ]]; then
              echo "➕ ${line:1}" >> logs/message_diff.txt
            elif [[ "$line" =~ ^\- ]]; then
              echo "❌ ${line:1}" >> logs/message_diff.txt
            fi
          done

          echo -e "\n----------------------------------------\n" >> logs/message_diff.txt

      - name: 🚀 Commit and push diff to log branch
        if: steps.check_file.outputs.changed == 'true'
        run: |
          # Save the new diff temporarily
          cp logs/message_diff.txt temp_diff.txt || cp /dev/null temp_diff.txt

          # Remove to avoid conflict with checkout
          rm -f logs/message_diff.txt

          # Fetch branch info
          git fetch origin auto/log-message-changes || true
          BRANCH_EXISTS=$(git ls-remote --heads origin auto/log-message-changes | wc -l)

          if [ "$BRANCH_EXISTS" -eq 1 ]; then
            echo "✅ Branch exists. Checking it out..."
            git checkout -b auto/log-message-changes origin/auto/log-message-changes
          else
            echo "🚀 Branch doesn't exist. Creating new..."
            git checkout -b auto/log-message-changes
          fi

          # Ensure logs directory exists
          mkdir -p logs

          # If file exists, append to it, else create new
          if [ -f logs/message_diff.txt ]; then
            echo "📄 Appending to existing logs/message_diff.txt"
            cat temp_diff.txt >> logs/message_diff.txt
          else
            echo "🆕 Creating new logs/message_diff.txt"
            mv temp_diff.txt logs/message_diff.txt
          fi

          # Commit and push
          git add logs/message_diff.txt
          git commit -m "📝 Append diff log for $GITHUB_SHA"
          git push origin auto/log-message-changes --force
